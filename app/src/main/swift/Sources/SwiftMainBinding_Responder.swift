
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql' 'Sources' '../java' ///

/// interface com.johnholdsworth.swiftbindings.SwiftMainBinding$Responder ///

public protocol SwiftMainBinding_Responder: JavaProtocol {

    /// public abstract void com.johnholdsworth.swiftbindings.SwiftMainBinding$Responder.response(java.lang.String)

    func response( abc: String? )

}


open class SwiftMainBinding_ResponderForward: JNIObjectForward, SwiftMainBinding_Responder {

    private static var SwiftMainBinding_ResponderJNIClass: jclass?

    /// public abstract void com.johnholdsworth.swiftbindings.SwiftMainBinding$Responder.response(java.lang.String)

    private static var response_MethodID_2: jmethodID?

    open func response( abc: String? ) {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        __args[0] = JNIType.toJava( value: abc, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "response", methodSig: "(Ljava/lang/String;)V", methodCache: &SwiftMainBinding_ResponderForward.response_MethodID_2, args: &__args, locals: &__locals )
    }

    open func response( _ _abc: String? ) {
        response( abc: _abc )
    }

}

